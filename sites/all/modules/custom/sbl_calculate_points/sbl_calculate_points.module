<?php

function team_list_calculate_team_points($nid) {
  //Get all Team Matches the team has been involved in

  // The season that is viewed
  $season = arg(1);

  // Query for Home matches
  $team_home_match_query = new EntityFieldQuery();

  $team_home_match_query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'team_match')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_tm_team_1', 'target_id', $nid)
    ->fieldCondition('field_tm_saison', 'tid', $season)
    // Bypass node access
    ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT');

  $team_home_match = $team_home_match_query->execute();

  // Query for away matches
  $team_away_match_query = new EntityFieldQuery();

  $team_away_match_query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'team_match')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_tm_team_2', 'target_id', $nid)
    ->fieldCondition('field_tm_saison', 'tid', $season)
    // Bypass node access
    ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT');

  $team_away_match = $team_away_match_query->execute();

  // Set the variable for the home team points
  $team_home_team_points = 0;
  $team_away_team_points = 0;


  // Get the nids for the home matches, extract the home team points
  if(isset($team_home_match['node'])) {
    $team_home_match_nids = array_keys($team_home_match['node']);
    foreach($team_home_match_nids as $key => $home_match) {
     $team_home_match_wrapper = entity_metadata_wrapper('node', $home_match);
      $team_home_team_points += $team_home_match_wrapper->field_tm_team_points_tm_1->label();
    }
  }

   // Get the nids for the away matches, extract the away team points
   if(isset($team_away_match['node'])) {
    $team_away_match_nids = array_keys($team_away_match['node']);
    foreach($team_away_match_nids as $key => $away_match) {
     $team_away_match_wrapper = entity_metadata_wrapper('node', $away_match);
      $team_away_team_points += $team_away_match_wrapper->field_tm_team_points_tm_2->label();
    }
  }
  $team_sum_team_points = 0;
  $team_sum_team_points = floatval($team_home_team_points + $team_away_team_points);


  return $team_sum_team_points;
}

function team_list_calculate_board_points($nid) {
  //Get all Team Matches the team has been involved in
  $season = arg(1);

  // Query for Home matches
  $team_home_match_query = new EntityFieldQuery();

  $team_home_match_query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'team_match')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_tm_team_1', 'target_id', $nid)
    ->fieldCondition('field_tm_saison', 'tid', $season)
    // Bypass node access
    ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT');

  $team_home_match = $team_home_match_query->execute();

  // Query for away matches
  $team_away_match_query = new EntityFieldQuery();

  $team_away_match_query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'team_match')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_tm_team_2', 'target_id', $nid)
    ->fieldCondition('field_tm_saison', 'tid', $season)
    // Bypass node access
    ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT');

  $team_away_match = $team_away_match_query->execute();

  // Set the variable for the home team points
  $team_home_board_points = 0;
  $team_away_board_points = 0;

  // Get the nids for the home matches, extract the home team points
  if(isset($team_home_match['node'])) {
    $team_home_match_nids = array_keys($team_home_match['node']);
    foreach($team_home_match_nids as $key => $home_match) {
     $team_home_match_wrapper = entity_metadata_wrapper('node', $home_match);
      $team_home_board_points += $team_home_match_wrapper->field_tm_board_points_team_1->label();
   }
  }

   // Get the nids for the away matches, extract the away team points
   if(isset($team_away_match['node'])) {
    $team_away_match_nids = array_keys($team_away_match['node']);
    foreach($team_away_match_nids as $key => $away_match) {
     $team_away_match_wrapper = entity_metadata_wrapper('node', $away_match);
      $team_away_board_points +=$team_away_match_wrapper->field_tm_board_points_team_2->label();
    }
  }
  $team_sum_board_points = 0;
  $team_sum_board_points = floatval($team_home_board_points + $team_away_board_points);


  return $team_sum_board_points;
}

function team_list_sort_by_team_and_board_points($team_points_1, $team_points_2 ,$board_points_1, $board_points_2) {
  $a = $team_points_1;
  $b = $team_points_2;
  $c = $board_points_1;
  $d = $board_points_2;
  // Sort by team points, if the team points are different
  if($a > $b) {
    return -1;
  } elseif ($a < $b) {
    return 1;
  }
  // If the team points are the same, additionally sort by board points
  elseif ($a == $b && $c > $d) {
    return -1;
  } elseif ($a == $b && $c < $d) {
    return 1;
  }
}
