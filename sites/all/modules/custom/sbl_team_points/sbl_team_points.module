<?php

/**
 * Function to calculate the sum of the team points for a season
 * for a team.
 * @param $season
 * @param $nid
 */

function calculate_team_points($season, $nid) {
  // Get all team points for the home team
  // Get all Team Matches the team has been involved in
  // The season that is viewed
  // Query for Home matches
  $team_home_match_query = new EntityFieldQuery();

  $team_home_match_query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'team_match')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_tm_team_1', 'target_id', $nid)
    ->fieldCondition('field_tm_saison', 'tid', $season)
    ->fieldCondition('field_game_has_result', 'value', 1)
    // Bypass node access
    ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT');

  $team_home_match = $team_home_match_query->execute();

  // Query for away matches
  $team_away_match_query = new EntityFieldQuery();

  $team_away_match_query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'team_match')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_tm_team_2', 'target_id', $nid)
    ->fieldCondition('field_tm_saison', 'tid', $season)
    ->fieldCondition('field_game_has_result', 'value', 1)
    // Bypass node access
    ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT');

  $team_away_match = $team_away_match_query->execute();

  // Set the variable for the home team points
  $team_home_team_points = 0;
  $team_away_team_points = 0;


  // Get the nids for the home matches, extract the home team points
  if (isset($team_home_match['node'])) {
    $team_home_match_nids = array_keys($team_home_match['node']);
    foreach ($team_home_match_nids as $key => $home_match) {
      $team_home_match_wrapper = entity_metadata_wrapper('node', $home_match);
      if (!is_null($team_home_match_wrapper->field_tm_team_points_tm_1->label())) {
        $team_home_team_points += $team_home_match_wrapper->field_tm_team_points_tm_1->label();

      }
    }
  }

  // Get the nids for the away matches, extract the away team points
  if (isset($team_away_match['node'])) {
    $team_away_match_nids = array_keys($team_away_match['node']);
    foreach ($team_away_match_nids as $key => $away_match) {
      $team_away_match_wrapper = entity_metadata_wrapper('node', $away_match);
      if (!is_null($team_away_match_wrapper->field_tm_team_points_tm_2->label())) {
        $team_away_team_points += $team_away_match_wrapper->field_tm_team_points_tm_2->label();
      }
    }
  }
  $team_points = 0;
  $team_points = floatval($team_home_team_points + $team_away_team_points);

  return($team_points);
}

/**
 * Function to calculate the sum of the board points for a season
 * for a team.
 * @param $season
 * @param $nid
 */
function calculate_board_points($season, $nid) {

  $team_home_match_query = new EntityFieldQuery();

  $team_home_match_query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'team_match')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_tm_team_1', 'target_id', $nid)
    ->fieldCondition('field_tm_saison', 'tid', $season)
    ->fieldCondition('field_game_has_result', 'value', 1)
    // Bypass node access
    ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT');

  $team_home_match = $team_home_match_query->execute();

  // Query for away matches
  $team_away_match_query = new EntityFieldQuery();

  $team_away_match_query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'team_match')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_tm_team_2', 'target_id', $nid)
    ->fieldCondition('field_tm_saison', 'tid', $season)
    ->fieldCondition('field_game_has_result', 'value', 1)
    // Bypass node access
    ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT');

  $team_away_match = $team_away_match_query->execute();

  // Set the variable for the home team points
  $team_home_board_points = 0;
  $team_away_board_points = 0;

  // Get the nids for the home matches, extract the home team points
  if (isset($team_home_match['node'])) {
    $team_home_match_nids = array_keys($team_home_match['node']);
    foreach ($team_home_match_nids as $key => $home_match) {
      $team_home_match_wrapper = entity_metadata_wrapper('node', $home_match);
      if (!is_null($team_home_match_wrapper->field_tm_board_points_team_1->label())) {
        $team_home_board_points += $team_home_match_wrapper->field_tm_board_points_team_1->label();
      }

    }
  }

  // Get the nids for the away matches, extract the away team points
  if (isset($team_away_match['node'])) {
    $team_away_match_nids = array_keys($team_away_match['node']);
    foreach ($team_away_match_nids as $key => $away_match) {
      $team_away_match_wrapper = entity_metadata_wrapper('node', $away_match);
      if (!is_null($team_away_match_wrapper->field_tm_board_points_team_2->label())) {
        $team_away_board_points += $team_away_match_wrapper->field_tm_board_points_team_2->label();
      }
    }
  }
  $board_points = 0;
  $board_points = floatval($team_home_board_points + $team_away_board_points);

  return $board_points;
}



/**
 * Implements hook_node_update()
 * Save team and board points into the table 'sbl_team_points'
 * when a Team Match node is updated
 */

function sbl_team_points_entity_postsave($entity, $entity_type, $op) {
  if($entity_type == 'node' && $entity->type == 'team_match' && ($op == 'insert' || $op == 'update' || $op == 'delete')) {

    list($id) = entity_extract_ids($entity_type, $entity);
    watchdog('hook_post_action_test', "The {$op}d entity {$entity_type} id is {$id} from " . __FUNCTION__);
    // Make sure all variables are set
    $season = '';
    $team_home_nid = '';
    $team_away_nid = '';
    $name_team_home = '';
    $name_team_away = '';

    $team_home_sum_team_points = '';
    $team_away_sum_team_points = '';
    $team_home_sum_board_points = '';
    $team_away_sum_board_points = '';

    $node_wrapper = entity_metadata_wrapper('node', $entity);
    dpm($node_wrapper->value());

    // Get the season value from the node
    $field_season_value = $node_wrapper->field_tm_saison->value();
    if (!empty($field_season_value) && $node_wrapper->field_tm_saison->value() != '') {
      $season = $node_wrapper->field_tm_saison->tid->value();
    }

    $field_tm_team_1_value = $node_wrapper->field_tm_team_1->value();
    if (!empty($field_tm_team_1_value)) {
      $team_home_nid = $node_wrapper->field_tm_team_1->nid->value();
      $name_team_home = $node_wrapper->field_tm_team_1->title->value();

    }

    $field_tm_team_2_value = $node_wrapper->field_tm_team_2->value();
    if (!empty($field_tm_team_2_value)) {
      $team_away_nid = $node_wrapper->field_tm_team_2->nid->value();
      $name_team_away = $node_wrapper->field_tm_team_2->title->value();
    }

    // Calculate Team points for the home team
    // make sure the season and nid for the home team is set
    if ($season != '' && $team_home_nid != '') {
      //Get all Team Matches the team has been involved in
      // Query for Home matches
      $team_home_sum_team_points = calculate_team_points($season, $team_home_nid);
    }

    // Calculate Team points for the away team
    // make sure the season and nid for the home team is set
    if ($season != '' && $team_away_nid != '') {
      //Get all Team Matches the team has been involved in
      // Query for Home matches
      $team_away_sum_team_points = calculate_team_points($season, $team_away_nid);
    }

    // Calculate Board points for the home team
    // make sure the season and nid for the home team is set
    if ($season != '' && $team_home_nid != '') {
      //Get all Team Matches the team has been involved in
      // Query for Home matches
      $team_home_sum_board_points = calculate_board_points($season, $team_home_nid);
    }

    // Calculate Board points for the away team
    // make sure the season and nid for the home team is set
    if ($season != '' && $team_away_nid != '') {
      //Get all Team Matches the team has been involved in
      // Query for Home matches
      $team_away_sum_board_points = calculate_board_points($season, $team_away_nid);
    }




    // Check if there is already an entry in the table sbl_team_points for the home team and season
    $exists_home_team = db_query('SELECT node_id, season FROM {sbl_team_points} WHERE node_id = :team_home_nid AND season = :season', array(
      ':team_home_nid' => $team_home_nid,
      ':season' => $season
    ));

    if ($season != '' && $team_home_nid != '') {
      // Write the points for the home team into the database table 'sbl_team_points'
      // If an entry for the team already exists, update it
      if ($exists_home_team->rowCount() > 0) {
        $points_home_team_update = db_update('sbl_team_points')
          ->fields(array(
            'team_points' => $team_home_sum_team_points,
            'board_points' => $team_home_sum_board_points,
          ))
          ->condition('node_id', $team_home_nid, '=')
          ->condition('season', $season, '=')
          ->execute();
      }
      // If no entry exists, create one
      else {
        // insert a new row, if the row for the team and season does not already exist
        $points_home_team_insert = db_insert('sbl_team_points')
          ->fields(array(
            'node_id' => $team_home_nid,
            'name' => $name_team_home,
            'season' => $season,
            'team_points' => $team_home_sum_team_points,
            'board_points' => $team_home_sum_board_points,
          ))
          ->execute();
      }
    }

    // Check if there is already an entry in the table sbl_team_points for the away team and season
    $exists_away_team = db_query('SELECT node_id, season FROM {sbl_team_points} WHERE node_id = :team_away_nid AND season = :season', array(
      ':team_away_nid' => $team_away_nid,
      ':season' => $season
    ));

    // Only write into database if the season and team nids are set
    if ($season != '' && $team_away_nid != '') {
      // Write the points for the home team into the database table 'sbl_team_points'
      // If an entry for the team already exists, update it
      if ($exists_away_team->rowCount() > 0) {
        $points_away_team_update = db_update('sbl_team_points')
          ->fields(array(
            'team_points' => $team_away_sum_team_points,
            'board_points' => $team_away_sum_board_points,
          ))
          ->condition('node_id', $team_away_nid, '=')
          ->condition('season', $season, '=')
          ->execute();
      }
      // If no entry exists, create one
      else {
        // insert a new row, if the row for the team and season does not already exist
        $points_away_team_insert = db_insert('sbl_team_points')
          ->fields(array(
            'node_id' => $team_away_nid,
            'name' => $name_team_away,
            'season' => $season,
            'team_points' => $team_away_sum_team_points,
            'board_points' => $team_away_sum_board_points,
          ))
          ->execute();
      }
    }

//    dpm($name_team_home . ', ' . $team_home_sum_team_points . ', ' . $team_home_sum_board_points . ', ' . $name_team_away . ', ' . $team_away_sum_team_points . ', ' . $team_away_sum_board_points);
  }
}




