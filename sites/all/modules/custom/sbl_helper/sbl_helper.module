<?php

/**
 * Load our include files
 */
include_once('includes/statistics_navigation.inc');
include_once('includes/results.inc');

/*
 * Filter function for the player page to get the games one player has played.
 * @TODO: Write Views-Filter-Plugin for this, because the performance is bad
 */

function filter_single_games_player($row) {
  $player = arg(1);
  $season = arg(2);

  if(($row->field_mt_player_1_1 == $player || $row->field_mt_player_2_1 == $player) && $row->field_tm_saison_1 == $season) {
    return FALSE;
  } else {
    return TRUE;
  }
}

/*
 * Load scripts and the matching jquery versions on certain pages
 */

function sbl_helper_init() {


  $module_path = drupal_get_path('module', 'sbl_helper');

// load the slick script and jquery 1.11 on the front page

// load the diplayed path. This is necessary for paths that are just aliases
// It also works for system paths and thus is more reliable than arg(x)
  $path = drupal_get_path_alias($_GET['q']);
  $path_array = explode('/', $path);

  if (drupal_is_front_page()) {
    drupal_add_js(libraries_get_path('jquery-1.11') . '/jquery-1.11.1.min.js');
    drupal_add_css(libraries_get_path('slick') . '/slick/slick.css');
    drupal_add_js(libraries_get_path('slick') . '/slick/slick.min.js');
    drupal_add_js('var jq111 = jQuery; jQuery.noConflict(true);',
      array('type' => 'inline', 'scope' => 'header'));
    drupal_add_js($module_path . '/js/sbl_slick_slider.js');
  }
  if($path_array[0] == 'verein') {
    drupal_add_js($module_path . '/js/sbl_club_tabs.js');
  }
}

/**
 * Check for season and matchday
 */
function check_current_season_matchday($row) {
  // Get the current season and the current matchday as
  // set in the sbl settings module
  $current_season = get_current_season();
  $current_matchday = get_current_matchday();
  // Show only the elements that have the season and matchday as set in SBL settings
  if($current_season == $row->field_tm_saison && $current_matchday == $row->field_tm_spieltag_1) {
    return FALSE;
  } else {
    return TRUE;
  }
}

/**
 * Check for season and date of matchday
 */
function check_current_season_date_matchday($row) {
  // Get the current season and the Date for the matchday as
  // set in SBL Settings
  $current_season = get_current_season();
  $date_matchday = get_date_matchday();
  $date_row = $row->field_datum;
  $date_row_object = new DateTime($date_row);
  $date_row_formatted = date_format($date_row_object, 'Y-m-d');
//  dpm($date_matchday);
//  dpm($date_row_formatted);

  // Show only the elements that have the season and date as set in SBL settings
  if($current_season == $row->field_tm_saison && $date_matchday == $date_row_formatted) {
    return FALSE;
  } else {
    return TRUE;
  }
}

function argument_player($view) {
  //dpm($view);
  $player_nid = arg(1);

  $player_2_query = new EntityFieldQuery();

  $player_2_query->entityCondition('entity_type', 'field_collection_item')
    ->entityCondition('bundle', 'field_tm_game')
    ->fieldCondition('field_mt_player_2', 'target_id', $player_nid)
    // Bypass node access
    ->addTag('DANGEROUS_ACCESS_CHECK_OPT_OUT');

  $player_2 = $player_2_query->execute();
}

/**
 * Pass the argument into the filter on the player page to select the single games
 * in which the player was either player 1 or player 2
 */
function sbl_helper_views_pre_build(&$view) {
  if($view->name == 'single_games_player') {
     $player_id = arg(1);
     $season = arg(2);
    if($player_id != '' && $season != '') {
      $view->display_handler->handlers['filter']['field_mt_player_1_target_id']->value['value'] = $player_id;
      $view->display_handler->handlers['filter']['field_mt_player_2_target_id']->value['value'] = $player_id;
      $view->display_handler->handlers['filter']['field_tm_saison_tid']->value = $season;
    }
  }
  if($view->name == 'spielplan' && $view->current_display == 'block_1') {
    $club_id = arg(1);
    foreach($view->display_handler->handlers['filter']['field_tm_team_2_target_id']->value as $key => $value) {
      unset($view->display_handler->handlers['filter']['field_tm_team_2_target_id']->value[$key]);
    };
    foreach($view->display_handler->handlers['filter']['field_tm_team_1_target_id']->value as $key => $value) {
      unset($view->display_handler->handlers['filter']['field_tm_team_1_target_id']->value[$key]);
    };
    $view->display_handler->handlers['filter']['field_tm_team_1_target_id']->value['value'] = $club_id;
    $view->display_handler->handlers['filter']['field_tm_team_2_target_id']->value['value'] = $club_id;
  }
}

/**
 * implements hook_views_pre_render()
 * Change the titles of some views programmatically
 * based on arguments
 */
function sbl_helper_views_pre_render(&$view) {
  // Set the title for the "Aktuelle Tabelle" depending on the season tid
  // from the URL
  if ($view->name == 'teams_leaderbord' && $view->current_display == 'page') {
    $tid = arg(1);
    $term = taxonomy_term_load($tid);
    $view->build_info['title'] = 'Aktuelle Tabelle ' . $term->name;
  }
}
